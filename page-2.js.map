{"version":3,"file":"page-2.js","sources":["../src/js/01-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nlet countdownInterval;\nlet userSelectedDate = null;\n\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n\n\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startBtn.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  startCountdown();\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimer() {\n  const now = new Date();\n  const timeLeft = userSelectedDate - now;\n\n  if (timeLeft <= 0) {\n    clearInterval(countdownInterval);\n    iziToast.success({\n      title: 'Completed',\n      message: 'Countdown finished!',\n    });\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(timeLeft);\n  daysSpan.textContent = String(days).padStart(2, '0');\n  hoursSpan.textContent = String(hours).padStart(2, '0');\n  minutesSpan.textContent = String(minutes).padStart(2, '0');\n  secondsSpan.textContent = String(seconds).padStart(2, '0');\n}\n\nfunction startCountdown() {\n  countdownInterval = setInterval(updateTimer, 1000);\n}\n"],"names":["startBtn","daysSpan","hoursSpan","minutesSpan","secondsSpan","countdownInterval","userSelectedDate","options","selectedDates","selectedDate","iziToast","flatpickr","startCountdown","convertMs","ms","days","hours","minutes","seconds","updateTimer","timeLeft"],"mappings":"2GAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EACAC,EAAmB,KAGvBN,EAAS,SAAW,GAEpB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAGhCC,GAAgB,IAAI,MACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDV,EAAS,SAAW,KAEpBM,EAAmBG,EACnBT,EAAS,SAAW,GAEvB,CACH,EAEAW,EAAU,mBAAoBJ,CAAO,EAErCP,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBY,GACF,CAAC,EAED,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,GAAc,CAErB,MAAMC,EAAWd,EADL,IAAI,KAGhB,GAAIc,GAAY,EAAG,CACjB,cAAcf,CAAiB,EAC/BK,EAAS,QAAQ,CACf,MAAO,YACP,QAAS,qBACf,CAAK,EACD,MACD,CAED,KAAM,CAAE,KAAAK,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUO,CAAQ,EAC5DnB,EAAS,YAAc,OAAOc,CAAI,EAAE,SAAS,EAAG,GAAG,EACnDb,EAAU,YAAc,OAAOc,CAAK,EAAE,SAAS,EAAG,GAAG,EACrDb,EAAY,YAAc,OAAOc,CAAO,EAAE,SAAS,EAAG,GAAG,EACzDb,EAAY,YAAc,OAAOc,CAAO,EAAE,SAAS,EAAG,GAAG,CAC3D,CAEA,SAASN,GAAiB,CACxBP,EAAoB,YAAYc,EAAa,GAAI,CACnD"}